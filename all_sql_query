/* Create, View & Use Databases */  Single line comments start with --

-- Create Database

CREATE DATABASE DEMO;

-- To View or confirm Database 

SHOW DATABASES;

-- To start using database

USE DEMO; 

-- Create Table

CREATE TABLE TEST_1(EID INT, NAME VARCHAR(30), SALARY FLOAT);

-- To View or confirm table

Describe TEST_1;
DESC TEST_1;



SELECT COUNT(*) FROM BANK_DETAILS
SELECT * FROM BANK_DETAILS
SELECT AGE, LOAN, JOB, FROM BANK_DETIALS
SELECT `DEFAULT` FROM BANK_DETAILS
SELECT * FROM BANK_DETAILS LIMIT 10
SELECT * FROM BANK_DETAILS WHERE AGE = 33
SELECT * FROM BANK_DETAILS WHERE AGE > 60
ELECT * FROM BANK_DETAILS WHERE AGE = 60
SELECT * FROM BANK_DETAILS WHERE AGE  = 60 AND JOB = 'RETIRED'
SELECT * FROM BANK_DETAILS WHERE EDUCATION = 'UNKNOWN' OR MARITAL = 'SINGLE'

SELECT DISTINCT JOB FROM BANK_DETAILS   [ find only jobs available in column]
SELECT * FROM BANK_DETAILS ORDER BY AGE [ arrange age by ascending order ]
SELECT * FROM BANK_DETAILS ORDER BY AGE DESC [ arrange age by descending order ]

SELECT SUM(BALANCE) AS "BALANCE" FROM BANK_DETAILS; [find sum of balance]
SELECT AVG(BALANCE) AS "BALANCE" FROM BANK_DETAILS; [find average of balance]
SELECT MIN(BALANCE) AS "BALANCE" FROM BANK_DETAILS;[find minimum of balance]
SELECT MAX(BALANCE) AS "BALANCE" FROM BANK_DETAILS;[find maximum of balance]
SELECT * FROM BANK_DETAILS WHERE LOAN = 'YES' [all who have loan]
SELECT JOB, AVG(BALANCE) AS "BALANCE" FROM BANK_DETAILS WHERE JOB = 'ADMIN.' GROUP BY JOB  [Average balance of Admin]
SELECT * FROM BANK_DETAILS WHERE JOB = 'UNEMPLOYED' AND AGE < 45 [Record without job and age less than 45]
SELECT * FROM BANK_DETAILS WHERE EDUCATION = 'PRIMARY' AND JOB = 'UNEMPLOYED' [ Records whos education primary and person is jobless ]
SELECT * FROM BANK_DETAILS WHERE BALANCE <= 0  [Find record whose balance is negative]
SELECT HOUSING, EDUCATION FROM BANK_DETAILS WHERE HOUSING = 'NO'  [Find record whose not have house and education two columns view ]
SELECT * FROM BANK_DETAILS WHERE BALANCE IN (SELECT MIN(BALANCE) FROM BANK_DETAILS) [ To Find minmum balance ]
SELECT * FROM BANK_DETAILS WHERE BALANCE = (SELECT MIN(BALANCE) MINBALANCE FROM BANK_DETAILS); [ To Find minmum balance ]
SELECT * FROM BANK_DETAILS WHERE BALANCE IN  (SELECT MAX(BALANCE) FROM BANK_DETAILS)  [ To Find Maximum balance ]

-- Create Procedure 

DELIMITER &&
CREATE PROCEDURE SHOW()
BEGIN
	SELECT * FROM BANK_DETAILS;
END &&

-- Create Procedure 

DELIMITER &&
CREATE PROCEDURE AVG_BAL_JOBROLE1(IN RAM VARCHAR(30))
BEGIN
	SELECT  AVG(BALANCE) FROM BANK_DETAILS WHERE JOB = RAM;
END &&

-- View Results
CALL AVG_BAL_JOBROLE1('ADMIN.')
CALL AVG_BAL_JOBROLE1('RETIRED')
CALL AVG_BAL_JOBROLE1('UNKNOWN')


-- Create View

CREATE VIEW BANK_VIEW AS SELECT AGE , JOB , MARITAL , BALANCE , EDUCATION FROM BANK_DETAILS; 

-- Results

SELECT  AVG(BALANCE) FROM BANK_VIEW WHERE JOB = 'ADMIN.'


-- Load Data into Table

LOAD DATA INFILE 'D:\ineuron.ai - Data Engineer\SQL\AttributeDataSet.csv'
into table dress
fields terminated by ','
enclosed by '"'
lines terminated by '\n'
IGNORE 1 ROWS;


